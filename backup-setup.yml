---
- name: List PostgreSQL users
  hosts: all
  become: true
  vars:
    backup_dir: "/backups"
    pg_user: postgres
    ssh_public_key_path: ".ssh/id_rsa.pub"
    ssh_secret_key_path: ".ssh/id_rsa"
  tasks:

    - name: Install OpenSSH
      apt:
        name: openssh-client
        state: present

    - name: Create postgres group
      ansible.builtin.group:
        name: postgres
        state: present
      when: inventory_hostname == 'hostB.renue'

    - name: Create postgres user
      ansible.builtin.user:
        name: "{{ pg_user }}"
        groups: postgres
        create_home: true
      when: inventory_hostname == 'hostB.renue'

    - name: Create backup directory
      ansible.builtin.file:
        path: "{{ backup_dir }}"
        mode: 0777
        owner: postgres
        state: directory

    - name: Create .ssh directory
      file:
        path: "/home/{{ pg_user }}/.ssh"
        state: directory
        owner: "{{ pg_user }}"
        group: "{{ pg_user }}"
        mode: '0700'

    - name: Copy pub SSH key
      copy:
        src: "{{ ssh_public_key_path }}"
        dest: "/home/{{ pg_user }}/.ssh/authorized_keys"
        owner: "{{ pg_user }}"
        group: "{{ pg_user }}"
        mode: '0644'
      when: inventory_hostname == 'hostB.renue'

    - name: Copy secret SSH key
      copy:
        src: "{{ ssh_secret_key_path }}"
        dest: "/home/{{ pg_user }}/.ssh/id_rsa"
        owner: "{{ pg_user }}"
        group: "{{ pg_user }}"
        mode: '0400'
      when: inventory_hostname == 'hostA.renue'

    - name: Backup db
      community.postgresql.postgresql_db:
        state: dump
        name: app
        target: "{{ backup_dir }}/app.gz"
      become: true
      become_user: postgres
      when: inventory_hostname == 'hostA.renue'

    - name: Set /backups/app.gz is readable by all users
      file:
        path: /backups/app.gz
        mode: '0644'
      when: inventory_hostname == 'hostA.renue'


    - name: Copy backup to hostB.renue
      ansible.builtin.command: >
        scp -o StrictHostKeyChecking=no -i /home/postgres/.ssh/id_rsa /backups/app.gz postgres@{{ hostvars['hostB.renue']['ansible_host'] }}:/backups/
      become: true
      become_user: postgres
      when: inventory_hostname == 'hostA.renue'
